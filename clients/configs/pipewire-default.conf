# PipeWire configuration file for PiBard clients
#
# This configuration sets up virtual sinks for multiple speakers
#

context.properties = {
    # Default settings
    default.clock.rate = 48000
    default.clock.quantum = 1024
    default.clock.min-quantum = 32
    default.clock.max-quantum = 8192
}

context.modules = [
    # Core modules
    { name = libpipewire-module-rt
        args = {
            nice.level = -11
        }
    }
    { name = libpipewire-module-protocol-native }
    { name = libpipewire-module-client-node }
    { name = libpipewire-module-adapter }
    { name = libpipewire-module-metadata }

    # Main snapcast sink
    { name = libpipewire-module-loopback
        args = {
            node.name = "snapcast_sink"
            capture.props = {
                media.class = "Audio/Sink"
                node.name = "snapcast_sink"
                node.description = "Snapcast Audio"
            }
            playback.props = {
                node.name = "snapcast_playback"
                media.class = "Audio/Source"
                audio.position = [ FL FR ]
            }
        }
    }

    # Speaker 1
    { name = libpipewire-module-loopback
        args = {
            node.name = "speaker1_loopback"
            capture.props = {
                media.class = "Audio/Sink"
                node.name = "speaker1"
                node.description = "Speaker 1"
                audio.position = [ FL FR ]
            }
            playback.props = {
                media.class = "Audio/Source"
                node.name = "speaker1_out"
                audio.position = [ FL FR ]
                node.target = "alsa_output.card0.analog-stereo"
            }
        }
    }

    # Speaker 2
    { name = libpipewire-module-loopback
        args = {
            node.name = "speaker2_loopback"
            capture.props = {
                media.class = "Audio/Sink"
                node.name = "speaker2"
                node.description = "Speaker 2"
                audio.position = [ FL FR ]
            }
            playback.props = {
                media.class = "Audio/Source"
                node.name = "speaker2_out"
                audio.position = [ FL FR ]
                node.target = "alsa_output.card1.analog-stereo"
            }
        }
    }

    # Speaker 3 (commented by default, uncommented for 3-speaker setups)
    #{ name = libpipewire-module-loopback
    #    args = {
    #        node.name = "speaker3_loopback"
    #        capture.props = {
    #            media.class = "Audio/Sink"
    #            sink_name = "speaker3"
    #            node.description = "Speaker 3"
    #            audio.position = [ FL FR ]
    #        }
    #        playback.props = {
    #            media.class = "Audio/Source"
    #            node.name = "speaker3_out"
    #            audio.position = [ FL FR ]
    #            node.target = "alsa_output.card2.analog-stereo"
    #        }
    #    }
    #}

    # Connect snapcast sink to all speakers
    { name = libpipewire-module-loopback
        args = {
            capture.props = {
                media.class = "Audio/Source"
                node.name = "snapcast_to_speaker1"
                source = "snapcast_sink.monitor"
            }
            playback.props = {
                media.class = "Audio/Sink"
                node.name = "speaker1_in"
                node.target = "speaker1"
            }
        }
    }

    { name = libpipewire-module-loopback
        args = {
            capture.props = {
                media.class = "Audio/Source"
                node.name = "snapcast_to_speaker2"
                source = "snapcast_sink.monitor"
            }
            playback.props = {
                media.class = "Audio/Sink"
                node.name = "speaker2_in"
                node.target = "speaker2"
            }
        }
    }

    # Speaker 3 connection (commented by default)
    #{ name = libpipewire-module-loopback
    #    args = {
    #        capture.props = {
    #            media.class = "Audio/Source"
    #            node.name = "snapcast_to_speaker3"
    #            source = "snapcast_sink.monitor"
    #        }
    #        playback.props = {
    #            media.class = "Audio/Sink"
    #            node.name = "speaker3_in"
    #            node.target = "speaker3"
    #        }
    #    }
    #}
] 